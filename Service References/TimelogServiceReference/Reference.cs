//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace TimelogDataMiner.TimelogServiceReference
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", ConfigurationName="TimelogServiceReference.ServiceSoap")]
    public interface ServiceSoap
    {
        #region Methods

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/ApiUserAuthentication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ApiUserAuthentication(string siteCode, string userName, string userPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/ApiUserAuthentication", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ApiUserAuthenticationAsync(string siteCode, string userName, string userPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetAllocationsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetAllocationsRaw(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetAllocationsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetAllocationsRawAsync(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetContactsRaw(string siteCode, string apiID, string apiPassword, int customerID, int contactID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int contactID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetContactsShortList(string siteCode, string apiID, string apiPassword, int customerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetContactsShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsShortListAsync(string siteCode, string apiID, string apiPassword, int customerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCountriesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCountriesShortList(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCountriesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCountriesShortListAsync(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerCommentsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomerCommentsRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerCommentsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerCommentsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomersRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, string ForeignID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, string ForeignID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomersShortList(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomersShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersShortListAsync(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusChangesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomerStatusChangesRaw(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusChangesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusChangesRawAsync(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCustomerStatusShortList(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetCustomerStatusShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusShortListAsync(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetDepartmentsShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetDepartmentsShortList(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetDepartmentsShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetDepartmentsShortListAsync(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetEmployeesRaw(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetEmployeesShortList(string siteCode, string apiID, string apiPassword, int departmentID, int status);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetEmployeesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesShortListAsync(string siteCode, string apiID, string apiPassword, int departmentID, int status);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetIndustriesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetIndustriesShortList(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetIndustriesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetIndustriesShortListAsync(string siteCode, string apiID, string apiPassword);

        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLineDetailsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawResponse GetInvoiceLineDetailsRaw(TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest request);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLineDetailsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawResponse> GetInvoiceLineDetailsRawAsync(TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest request);

        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLinesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawResponse GetInvoiceLinesRaw(TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest request);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoiceLinesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawResponse> GetInvoiceLinesRawAsync(TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest request);

        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoicesRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimelogDataMiner.TimelogServiceReference.GetInvoicesRawResponse GetInvoicesRaw(TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest request);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetInvoicesRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoicesRawResponse> GetInvoicesRawAsync(TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest request);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectCategoriesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectCategoriesShortList(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectCategoriesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectCategoriesShortListAsync(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectsRaw(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsRawAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectsShortList(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectsShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsShortListAsync(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectTypesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetProjectTypesShortList(string siteCode, string apiID, string apiPassword, string ProjectType);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetProjectTypesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectTypesShortListAsync(string siteCode, string apiID, string apiPassword, string ProjectType);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportCaseRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportCaseRaw(string siteCode, string apiID, string apiPassword, int SupportCaseID, string SupportNo, int EmployeeID, int CustomerID, int SupportContractID, int SupportTypeID, int DepartmentID, int Status);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportCaseRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportCaseRawAsync(string siteCode, string apiID, string apiPassword, int SupportCaseID, string SupportNo, int EmployeeID, int CustomerID, int SupportContractID, int SupportTypeID, int DepartmentID, int Status);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportContractRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportContractRaw(string siteCode, string apiID, string apiPassword, int SupportContractID, int EmployeeID, int CustomerID, int SupportContractTypeID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportContractRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportContractRawAsync(string siteCode, string apiID, string apiPassword, int SupportContractID, int EmployeeID, int CustomerID, int SupportContractTypeID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportJournalRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportJournalRaw(string siteCode, string apiID, string apiPassword, int SupportCaseID, int EmployeeID, int CustomerID, int SupportContractID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportJournalRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportJournalRawAsync(string siteCode, string apiID, string apiPassword, int SupportCaseID, int EmployeeID, int CustomerID, int SupportContractID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportTypesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSupportTypesShortList(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetSupportTypesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportTypesShortListAsync(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTasksRaw(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksRawAsync(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTasksShortList(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTasksShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksShortListAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTaskTypesShortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTaskTypesShortList(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTaskTypesShortList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTaskTypesShortListAsync(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTimeOffRegistrationsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTimeOffRegistrationsRaw(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetTimeOffRegistrationsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTimeOffRegistrationsRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate);

        // CODEGEN: Parameter 'startDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetWorkUnitsRaw", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawResponse GetWorkUnitsRaw(TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest request);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/GetWorkUnitsRaw", ReplyAction="*")]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawResponse> GetWorkUnitsRawAsync(TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest request);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertAllocations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode InsertAllocations(string siteCode, string apiID, string apiPassword, string AllocationXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertAllocations", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> InsertAllocationsAsync(string siteCode, string apiID, string apiPassword, string AllocationXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode InsertCustomers(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string CustomerXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> InsertCustomersAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string CustomerXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertEmployees", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode InsertEmployees(string siteCode, string apiID, string apiPassword, string EmployeesXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertEmployees", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> InsertEmployeesAsync(string siteCode, string apiID, string apiPassword, string EmployeesXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertLeads", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode InsertLeads(string siteCode, string apiID, string apiPassword, string XML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertLeads", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> InsertLeadsAsync(string siteCode, string apiID, string apiPassword, string XML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode InsertProjects(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string ProjectXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertProjects", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> InsertProjectsAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string ProjectXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertSupportIncidents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode InsertSupportIncidents(string siteCode, string apiID, string apiPassword, string supportIncidentsXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertSupportIncidents", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> InsertSupportIncidentsAsync(string siteCode, string apiID, string apiPassword, string supportIncidentsXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode InsertTasks(string siteCode, string apiID, string apiPassword, string TasksXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/InsertTasks", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> InsertTasksAsync(string siteCode, string apiID, string apiPassword, string TasksXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateCustomers(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateCustomersAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateEmployees", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateEmployees(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string EmployeesXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateEmployees", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateEmployeesAsync(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string EmployeesXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateProjects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateProjects(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateProjects", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateProjectsAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateTasks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateTasks(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string TasksXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/UpdateTasks", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateTasksAsync(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string TasksXML);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/ValidateCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidateCredentials(string siteCode, string apiID, string apiPassword);

        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/ws/tlp/v4_4/ValidateCredentials", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string siteCode, string apiID, string apiPassword);

        #endregion Methods
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : TimelogDataMiner.TimelogServiceReference.ServiceSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLineDetailsRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLineDetailsRawRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int customerID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int invoiceID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int invoiceLineDetailID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int projectID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;

        #endregion Fields

        #region Constructors

        public GetInvoiceLineDetailsRawRequest()
        {
        }

        public GetInvoiceLineDetailsRawRequest(string siteCode, string apiID, string apiPassword, int invoiceLineDetailID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.invoiceLineDetailID = invoiceLineDetailID;
            this.customerID = customerID;
            this.projectID = projectID;
            this.invoiceID = invoiceID;
            this.startDate = startDate;
            this.endDate = endDate;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLineDetailsRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLineDetailsRawResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetInvoiceLineDetailsRawResult;

        #endregion Fields

        #region Constructors

        public GetInvoiceLineDetailsRawResponse()
        {
        }

        public GetInvoiceLineDetailsRawResponse(System.Xml.XmlNode GetInvoiceLineDetailsRawResult)
        {
            this.GetInvoiceLineDetailsRawResult = GetInvoiceLineDetailsRawResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLinesRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLinesRawRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int customerID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int invoiceID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int invoiceLineID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int projectID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;

        #endregion Fields

        #region Constructors

        public GetInvoiceLinesRawRequest()
        {
        }

        public GetInvoiceLinesRawRequest(string siteCode, string apiID, string apiPassword, int invoiceLineID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.invoiceLineID = invoiceLineID;
            this.customerID = customerID;
            this.projectID = projectID;
            this.invoiceID = invoiceID;
            this.startDate = startDate;
            this.endDate = endDate;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoiceLinesRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoiceLinesRawResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetInvoiceLinesRawResult;

        #endregion Fields

        #region Constructors

        public GetInvoiceLinesRawResponse()
        {
        }

        public GetInvoiceLinesRawResponse(System.Xml.XmlNode GetInvoiceLinesRawResult)
        {
            this.GetInvoiceLinesRawResult = GetInvoiceLinesRawResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoicesRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoicesRawRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int customerID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int invoiceID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int status;

        #endregion Fields

        #region Constructors

        public GetInvoicesRawRequest()
        {
        }

        public GetInvoicesRawRequest(string siteCode, string apiID, string apiPassword, int invoiceID, int customerID, int status, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.invoiceID = invoiceID;
            this.customerID = customerID;
            this.status = status;
            this.startDate = startDate;
            this.endDate = endDate;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInvoicesRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetInvoicesRawResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetInvoicesRawResult;

        #endregion Fields

        #region Constructors

        public GetInvoicesRawResponse()
        {
        }

        public GetInvoicesRawResponse(System.Xml.XmlNode GetInvoicesRawResult)
        {
            this.GetInvoicesRawResult = GetInvoicesRawResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkUnitsRaw", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetWorkUnitsRawRequest
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=5)]
        public int allocationID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=1)]
        public string apiID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=2)]
        public string apiPassword;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=8)]
        public int departmentID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=4)]
        public int employeeID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=10)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endDate;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=7)]
        public int projectID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public string siteCode;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=9)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startDate;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=6)]
        public int taskID;
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=3)]
        public int workUnitID;

        #endregion Fields

        #region Constructors

        public GetWorkUnitsRawRequest()
        {
        }

        public GetWorkUnitsRawRequest(string siteCode, string apiID, string apiPassword, int workUnitID, int employeeID, int allocationID, int taskID, int projectID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            this.siteCode = siteCode;
            this.apiID = apiID;
            this.apiPassword = apiPassword;
            this.workUnitID = workUnitID;
            this.employeeID = employeeID;
            this.allocationID = allocationID;
            this.taskID = taskID;
            this.projectID = projectID;
            this.departmentID = departmentID;
            this.startDate = startDate;
            this.endDate = endDate;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkUnitsRawResponse", WrapperNamespace="http://www.timelog.com/ws/tlp/v4_4", IsWrapped=true)]
    public partial class GetWorkUnitsRawResponse
    {
        #region Fields

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/ws/tlp/v4_4", Order=0)]
        public System.Xml.XmlNode GetWorkUnitsRawResult;

        #endregion Fields

        #region Constructors

        public GetWorkUnitsRawResponse()
        {
        }

        public GetWorkUnitsRawResponse(System.Xml.XmlNode GetWorkUnitsRawResult)
        {
            this.GetWorkUnitsRawResult = GetWorkUnitsRawResult;
        }

        #endregion Constructors
    }

    [System.Diagnostics.DebuggerStepThroughAttribute]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<TimelogDataMiner.TimelogServiceReference.ServiceSoap>, TimelogDataMiner.TimelogServiceReference.ServiceSoap
    {
        #region Constructors

        public ServiceSoapClient()
        {
        }

        public ServiceSoapClient(string endpointConfigurationName)
            : base(endpointConfigurationName)
        {
        }

        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress)
            : base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            : base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            : base(binding, remoteAddress)
        {
        }

        #endregion Constructors

        #region Methods

        public System.Xml.XmlNode ApiUserAuthentication(string siteCode, string userName, string userPassword)
        {
            return base.Channel.ApiUserAuthentication(siteCode, userName, userPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> ApiUserAuthenticationAsync(string siteCode, string userName, string userPassword)
        {
            return base.Channel.ApiUserAuthenticationAsync(siteCode, userName, userPassword);
        }

        public System.Xml.XmlNode GetAllocationsRaw(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID)
        {
            return base.Channel.GetAllocationsRaw(siteCode, apiID, apiPassword, allocationID, taskID, employeeID, projectID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetAllocationsRawAsync(string siteCode, string apiID, string apiPassword, int allocationID, int taskID, int employeeID, int projectID)
        {
            return base.Channel.GetAllocationsRawAsync(siteCode, apiID, apiPassword, allocationID, taskID, employeeID, projectID);
        }

        public System.Xml.XmlNode GetContactsRaw(string siteCode, string apiID, string apiPassword, int customerID, int contactID)
        {
            return base.Channel.GetContactsRaw(siteCode, apiID, apiPassword, customerID, contactID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int contactID)
        {
            return base.Channel.GetContactsRawAsync(siteCode, apiID, apiPassword, customerID, contactID);
        }

        public System.Xml.XmlNode GetContactsShortList(string siteCode, string apiID, string apiPassword, int customerID)
        {
            return base.Channel.GetContactsShortList(siteCode, apiID, apiPassword, customerID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetContactsShortListAsync(string siteCode, string apiID, string apiPassword, int customerID)
        {
            return base.Channel.GetContactsShortListAsync(siteCode, apiID, apiPassword, customerID);
        }

        public System.Xml.XmlNode GetCountriesShortList(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetCountriesShortList(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCountriesShortListAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetCountriesShortListAsync(siteCode, apiID, apiPassword);
        }

        public System.Xml.XmlNode GetCustomerCommentsRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate)
        {
            return base.Channel.GetCustomerCommentsRaw(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID, fromDate, toDate);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerCommentsRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, System.DateTime fromDate, System.DateTime toDate)
        {
            return base.Channel.GetCustomerCommentsRawAsync(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID, fromDate, toDate);
        }

        public System.Xml.XmlNode GetCustomersRaw(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, string ForeignID)
        {
            return base.Channel.GetCustomersRaw(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID, ForeignID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersRawAsync(string siteCode, string apiID, string apiPassword, int customerID, int customerStatusID, int accountManagerID, string ForeignID)
        {
            return base.Channel.GetCustomersRawAsync(siteCode, apiID, apiPassword, customerID, customerStatusID, accountManagerID, ForeignID);
        }

        public System.Xml.XmlNode GetCustomersShortList(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID)
        {
            return base.Channel.GetCustomersShortList(siteCode, apiID, apiPassword, customerStatusID, accountManagerID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomersShortListAsync(string siteCode, string apiID, string apiPassword, int customerStatusID, int accountManagerID)
        {
            return base.Channel.GetCustomersShortListAsync(siteCode, apiID, apiPassword, customerStatusID, accountManagerID);
        }

        public System.Xml.XmlNode GetCustomerStatusChangesRaw(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId)
        {
            return base.Channel.GetCustomerStatusChangesRaw(siteCode, apiID, apiPassword, fromDate, toDate, employeeId);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusChangesRawAsync(string siteCode, string apiID, string apiPassword, System.DateTime fromDate, System.DateTime toDate, int employeeId)
        {
            return base.Channel.GetCustomerStatusChangesRawAsync(siteCode, apiID, apiPassword, fromDate, toDate, employeeId);
        }

        public System.Xml.XmlNode GetCustomerStatusShortList(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetCustomerStatusShortList(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCustomerStatusShortListAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetCustomerStatusShortListAsync(siteCode, apiID, apiPassword);
        }

        public System.Xml.XmlNode GetDepartmentsShortList(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetDepartmentsShortList(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetDepartmentsShortListAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetDepartmentsShortListAsync(siteCode, apiID, apiPassword);
        }

        public System.Xml.XmlNode GetEmployeesRaw(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status)
        {
            return base.Channel.GetEmployeesRaw(siteCode, apiID, apiPassword, employeeID, initials, departmentID, status);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, string initials, int departmentID, int status)
        {
            return base.Channel.GetEmployeesRawAsync(siteCode, apiID, apiPassword, employeeID, initials, departmentID, status);
        }

        public System.Xml.XmlNode GetEmployeesShortList(string siteCode, string apiID, string apiPassword, int departmentID, int status)
        {
            return base.Channel.GetEmployeesShortList(siteCode, apiID, apiPassword, departmentID, status);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetEmployeesShortListAsync(string siteCode, string apiID, string apiPassword, int departmentID, int status)
        {
            return base.Channel.GetEmployeesShortListAsync(siteCode, apiID, apiPassword, departmentID, status);
        }

        public System.Xml.XmlNode GetIndustriesShortList(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetIndustriesShortList(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetIndustriesShortListAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetIndustriesShortListAsync(siteCode, apiID, apiPassword);
        }

        public System.Xml.XmlNode GetInvoiceLineDetailsRaw(string siteCode, string apiID, string apiPassword, int invoiceLineDetailID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineDetailID = invoiceLineDetailID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawResponse retVal = ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetInvoiceLineDetailsRaw(inValue);
            return retVal.GetInvoiceLineDetailsRawResult;
        }

        public System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawResponse> GetInvoiceLineDetailsRawAsync(string siteCode, string apiID, string apiPassword, int invoiceLineDetailID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineDetailID = invoiceLineDetailID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetInvoiceLineDetailsRawAsync(inValue);
        }

        public System.Xml.XmlNode GetInvoiceLinesRaw(string siteCode, string apiID, string apiPassword, int invoiceLineID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineID = invoiceLineID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawResponse retVal = ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetInvoiceLinesRaw(inValue);
            return retVal.GetInvoiceLinesRawResult;
        }

        public System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawResponse> GetInvoiceLinesRawAsync(string siteCode, string apiID, string apiPassword, int invoiceLineID, int customerID, int projectID, int invoiceID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceLineID = invoiceLineID;
            inValue.customerID = customerID;
            inValue.projectID = projectID;
            inValue.invoiceID = invoiceID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetInvoiceLinesRawAsync(inValue);
        }

        public System.Xml.XmlNode GetInvoicesRaw(string siteCode, string apiID, string apiPassword, int invoiceID, int customerID, int status, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceID = invoiceID;
            inValue.customerID = customerID;
            inValue.status = status;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimelogDataMiner.TimelogServiceReference.GetInvoicesRawResponse retVal = ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetInvoicesRaw(inValue);
            return retVal.GetInvoicesRawResult;
        }

        public System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoicesRawResponse> GetInvoicesRawAsync(string siteCode, string apiID, string apiPassword, int invoiceID, int customerID, int status, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.invoiceID = invoiceID;
            inValue.customerID = customerID;
            inValue.status = status;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetInvoicesRawAsync(inValue);
        }

        public System.Xml.XmlNode GetProjectCategoriesShortList(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetProjectCategoriesShortList(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectCategoriesShortListAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetProjectCategoriesShortListAsync(siteCode, apiID, apiPassword);
        }

        public System.Xml.XmlNode GetProjectsRaw(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID)
        {
            return base.Channel.GetProjectsRaw(siteCode, apiID, apiPassword, projectID, status, customerID, projectManagerID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsRawAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int customerID, int projectManagerID)
        {
            return base.Channel.GetProjectsRawAsync(siteCode, apiID, apiPassword, projectID, status, customerID, projectManagerID);
        }

        public System.Xml.XmlNode GetProjectsShortList(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID)
        {
            return base.Channel.GetProjectsShortList(siteCode, apiID, apiPassword, status, customerID, projectManagerID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectsShortListAsync(string siteCode, string apiID, string apiPassword, int status, int customerID, int projectManagerID)
        {
            return base.Channel.GetProjectsShortListAsync(siteCode, apiID, apiPassword, status, customerID, projectManagerID);
        }

        public System.Xml.XmlNode GetProjectTypesShortList(string siteCode, string apiID, string apiPassword, string ProjectType)
        {
            return base.Channel.GetProjectTypesShortList(siteCode, apiID, apiPassword, ProjectType);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetProjectTypesShortListAsync(string siteCode, string apiID, string apiPassword, string ProjectType)
        {
            return base.Channel.GetProjectTypesShortListAsync(siteCode, apiID, apiPassword, ProjectType);
        }

        public System.Xml.XmlNode GetSupportCaseRaw(string siteCode, string apiID, string apiPassword, int SupportCaseID, string SupportNo, int EmployeeID, int CustomerID, int SupportContractID, int SupportTypeID, int DepartmentID, int Status)
        {
            return base.Channel.GetSupportCaseRaw(siteCode, apiID, apiPassword, SupportCaseID, SupportNo, EmployeeID, CustomerID, SupportContractID, SupportTypeID, DepartmentID, Status);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportCaseRawAsync(string siteCode, string apiID, string apiPassword, int SupportCaseID, string SupportNo, int EmployeeID, int CustomerID, int SupportContractID, int SupportTypeID, int DepartmentID, int Status)
        {
            return base.Channel.GetSupportCaseRawAsync(siteCode, apiID, apiPassword, SupportCaseID, SupportNo, EmployeeID, CustomerID, SupportContractID, SupportTypeID, DepartmentID, Status);
        }

        public System.Xml.XmlNode GetSupportContractRaw(string siteCode, string apiID, string apiPassword, int SupportContractID, int EmployeeID, int CustomerID, int SupportContractTypeID)
        {
            return base.Channel.GetSupportContractRaw(siteCode, apiID, apiPassword, SupportContractID, EmployeeID, CustomerID, SupportContractTypeID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportContractRawAsync(string siteCode, string apiID, string apiPassword, int SupportContractID, int EmployeeID, int CustomerID, int SupportContractTypeID)
        {
            return base.Channel.GetSupportContractRawAsync(siteCode, apiID, apiPassword, SupportContractID, EmployeeID, CustomerID, SupportContractTypeID);
        }

        public System.Xml.XmlNode GetSupportJournalRaw(string siteCode, string apiID, string apiPassword, int SupportCaseID, int EmployeeID, int CustomerID, int SupportContractID)
        {
            return base.Channel.GetSupportJournalRaw(siteCode, apiID, apiPassword, SupportCaseID, EmployeeID, CustomerID, SupportContractID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportJournalRawAsync(string siteCode, string apiID, string apiPassword, int SupportCaseID, int EmployeeID, int CustomerID, int SupportContractID)
        {
            return base.Channel.GetSupportJournalRawAsync(siteCode, apiID, apiPassword, SupportCaseID, EmployeeID, CustomerID, SupportContractID);
        }

        public System.Xml.XmlNode GetSupportTypesShortList(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetSupportTypesShortList(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSupportTypesShortListAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetSupportTypesShortListAsync(siteCode, apiID, apiPassword);
        }

        public System.Xml.XmlNode GetTasksRaw(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID)
        {
            return base.Channel.GetTasksRaw(siteCode, apiID, apiPassword, taskID, projectID, status, taskTypeID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksRawAsync(string siteCode, string apiID, string apiPassword, int taskID, int projectID, int status, int taskTypeID)
        {
            return base.Channel.GetTasksRawAsync(siteCode, apiID, apiPassword, taskID, projectID, status, taskTypeID);
        }

        public System.Xml.XmlNode GetTasksShortList(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID)
        {
            return base.Channel.GetTasksShortList(siteCode, apiID, apiPassword, projectID, status, taskTypeID);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTasksShortListAsync(string siteCode, string apiID, string apiPassword, int projectID, int status, int taskTypeID)
        {
            return base.Channel.GetTasksShortListAsync(siteCode, apiID, apiPassword, projectID, status, taskTypeID);
        }

        public System.Xml.XmlNode GetTaskTypesShortList(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetTaskTypesShortList(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTaskTypesShortListAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.GetTaskTypesShortListAsync(siteCode, apiID, apiPassword);
        }

        public System.Xml.XmlNode GetTimeOffRegistrationsRaw(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate)
        {
            return base.Channel.GetTimeOffRegistrationsRaw(siteCode, apiID, apiPassword, employeeID, departmentID, fromDate, toDate);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTimeOffRegistrationsRawAsync(string siteCode, string apiID, string apiPassword, int employeeID, int departmentID, System.DateTime fromDate, System.DateTime toDate)
        {
            return base.Channel.GetTimeOffRegistrationsRawAsync(siteCode, apiID, apiPassword, employeeID, departmentID, fromDate, toDate);
        }

        public System.Xml.XmlNode GetWorkUnitsRaw(string siteCode, string apiID, string apiPassword, int workUnitID, int employeeID, int allocationID, int taskID, int projectID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.workUnitID = workUnitID;
            inValue.employeeID = employeeID;
            inValue.allocationID = allocationID;
            inValue.taskID = taskID;
            inValue.projectID = projectID;
            inValue.departmentID = departmentID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawResponse retVal = ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetWorkUnitsRaw(inValue);
            return retVal.GetWorkUnitsRawResult;
        }

        public System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawResponse> GetWorkUnitsRawAsync(string siteCode, string apiID, string apiPassword, int workUnitID, int employeeID, int allocationID, int taskID, int projectID, int departmentID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate)
        {
            TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest inValue = new TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest();
            inValue.siteCode = siteCode;
            inValue.apiID = apiID;
            inValue.apiPassword = apiPassword;
            inValue.workUnitID = workUnitID;
            inValue.employeeID = employeeID;
            inValue.allocationID = allocationID;
            inValue.taskID = taskID;
            inValue.projectID = projectID;
            inValue.departmentID = departmentID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((TimelogDataMiner.TimelogServiceReference.ServiceSoap)(this)).GetWorkUnitsRawAsync(inValue);
        }

        public System.Xml.XmlNode InsertAllocations(string siteCode, string apiID, string apiPassword, string AllocationXML)
        {
            return base.Channel.InsertAllocations(siteCode, apiID, apiPassword, AllocationXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> InsertAllocationsAsync(string siteCode, string apiID, string apiPassword, string AllocationXML)
        {
            return base.Channel.InsertAllocationsAsync(siteCode, apiID, apiPassword, AllocationXML);
        }

        public System.Xml.XmlNode InsertCustomers(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string CustomerXML)
        {
            return base.Channel.InsertCustomers(siteCode, apiID, apiPassword, AllowDuplicate, DisableAutonumber, CustomerXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> InsertCustomersAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string CustomerXML)
        {
            return base.Channel.InsertCustomersAsync(siteCode, apiID, apiPassword, AllowDuplicate, DisableAutonumber, CustomerXML);
        }

        public System.Xml.XmlNode InsertEmployees(string siteCode, string apiID, string apiPassword, string EmployeesXML)
        {
            return base.Channel.InsertEmployees(siteCode, apiID, apiPassword, EmployeesXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> InsertEmployeesAsync(string siteCode, string apiID, string apiPassword, string EmployeesXML)
        {
            return base.Channel.InsertEmployeesAsync(siteCode, apiID, apiPassword, EmployeesXML);
        }

        public System.Xml.XmlNode InsertLeads(string siteCode, string apiID, string apiPassword, string XML)
        {
            return base.Channel.InsertLeads(siteCode, apiID, apiPassword, XML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> InsertLeadsAsync(string siteCode, string apiID, string apiPassword, string XML)
        {
            return base.Channel.InsertLeadsAsync(siteCode, apiID, apiPassword, XML);
        }

        public System.Xml.XmlNode InsertProjects(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string ProjectXML)
        {
            return base.Channel.InsertProjects(siteCode, apiID, apiPassword, AllowDuplicate, DisableAutonumber, ProjectXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> InsertProjectsAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int DisableAutonumber, string ProjectXML)
        {
            return base.Channel.InsertProjectsAsync(siteCode, apiID, apiPassword, AllowDuplicate, DisableAutonumber, ProjectXML);
        }

        public System.Xml.XmlNode InsertSupportIncidents(string siteCode, string apiID, string apiPassword, string supportIncidentsXML)
        {
            return base.Channel.InsertSupportIncidents(siteCode, apiID, apiPassword, supportIncidentsXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> InsertSupportIncidentsAsync(string siteCode, string apiID, string apiPassword, string supportIncidentsXML)
        {
            return base.Channel.InsertSupportIncidentsAsync(siteCode, apiID, apiPassword, supportIncidentsXML);
        }

        public System.Xml.XmlNode InsertTasks(string siteCode, string apiID, string apiPassword, string TasksXML)
        {
            return base.Channel.InsertTasks(siteCode, apiID, apiPassword, TasksXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> InsertTasksAsync(string siteCode, string apiID, string apiPassword, string TasksXML)
        {
            return base.Channel.InsertTasksAsync(siteCode, apiID, apiPassword, TasksXML);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawResponse TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetInvoiceLineDetailsRaw(TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest request)
        {
            return base.Channel.GetInvoiceLineDetailsRaw(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawResponse> TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetInvoiceLineDetailsRawAsync(TimelogDataMiner.TimelogServiceReference.GetInvoiceLineDetailsRawRequest request)
        {
            return base.Channel.GetInvoiceLineDetailsRawAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawResponse TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetInvoiceLinesRaw(TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest request)
        {
            return base.Channel.GetInvoiceLinesRaw(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawResponse> TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetInvoiceLinesRawAsync(TimelogDataMiner.TimelogServiceReference.GetInvoiceLinesRawRequest request)
        {
            return base.Channel.GetInvoiceLinesRawAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimelogDataMiner.TimelogServiceReference.GetInvoicesRawResponse TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetInvoicesRaw(TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest request)
        {
            return base.Channel.GetInvoicesRaw(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetInvoicesRawResponse> TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetInvoicesRawAsync(TimelogDataMiner.TimelogServiceReference.GetInvoicesRawRequest request)
        {
            return base.Channel.GetInvoicesRawAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawResponse TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetWorkUnitsRaw(TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest request)
        {
            return base.Channel.GetWorkUnitsRaw(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawResponse> TimelogDataMiner.TimelogServiceReference.ServiceSoap.GetWorkUnitsRawAsync(TimelogDataMiner.TimelogServiceReference.GetWorkUnitsRawRequest request)
        {
            return base.Channel.GetWorkUnitsRawAsync(request);
        }

        public System.Xml.XmlNode UpdateCustomers(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML)
        {
            return base.Channel.UpdateCustomers(siteCode, apiID, apiPassword, AllowDuplicate, UseForeignID, UseTimeLogID, CustomerXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateCustomersAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML)
        {
            return base.Channel.UpdateCustomersAsync(siteCode, apiID, apiPassword, AllowDuplicate, UseForeignID, UseTimeLogID, CustomerXML);
        }

        public System.Xml.XmlNode UpdateEmployees(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string EmployeesXML)
        {
            return base.Channel.UpdateEmployees(siteCode, apiID, apiPassword, UseForeignID, UseTimeLogID, EmployeesXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateEmployeesAsync(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string EmployeesXML)
        {
            return base.Channel.UpdateEmployeesAsync(siteCode, apiID, apiPassword, UseForeignID, UseTimeLogID, EmployeesXML);
        }

        public System.Xml.XmlNode UpdateProjects(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML)
        {
            return base.Channel.UpdateProjects(siteCode, apiID, apiPassword, AllowDuplicate, UseForeignID, UseTimeLogID, CustomerXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateProjectsAsync(string siteCode, string apiID, string apiPassword, int AllowDuplicate, int UseForeignID, int UseTimeLogID, string CustomerXML)
        {
            return base.Channel.UpdateProjectsAsync(siteCode, apiID, apiPassword, AllowDuplicate, UseForeignID, UseTimeLogID, CustomerXML);
        }

        public System.Xml.XmlNode UpdateTasks(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string TasksXML)
        {
            return base.Channel.UpdateTasks(siteCode, apiID, apiPassword, UseForeignID, UseTimeLogID, TasksXML);
        }

        public System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateTasksAsync(string siteCode, string apiID, string apiPassword, int UseForeignID, int UseTimeLogID, string TasksXML)
        {
            return base.Channel.UpdateTasksAsync(siteCode, apiID, apiPassword, UseForeignID, UseTimeLogID, TasksXML);
        }

        public bool ValidateCredentials(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.ValidateCredentials(siteCode, apiID, apiPassword);
        }

        public System.Threading.Tasks.Task<bool> ValidateCredentialsAsync(string siteCode, string apiID, string apiPassword)
        {
            return base.Channel.ValidateCredentialsAsync(siteCode, apiID, apiPassword);
        }

        #endregion Methods
    }
}